// Database cleaning
match (n)-[r]-() delete n, r

match (n) delete n

// CSV import
LOAD CSV WITH HEADERS FROM "file:///gene_gene_associations_50k.csv" AS gene
MERGE (n:TrialGene {Name:gene.OFFICIAL_SYMBOL_A})
MERGE (m:TrialGene {Name:gene.OFFICIAL_SYMBOL_B})
MERGE (n) -[:AFFILIATED_TO {AssociatedWith:gene.EXPERIMENTAL_SYSTEM}]-> (m)

//Counting the number of nodes
match (n:TrialGene)
return count(n)

//Counting the number of edges
match (n:TrialGene)-[r]->()
return count(r)

//Counting the number of loops:
match (n)-[r]->(n)
return count(r)

match (n)-[r]->(m) where m <> n 
return distinct n, m, count(r)

match (n)-[r]->(m) where m <> n 
return distinct n, m, count(r) as myCount 
order by myCount desc limit 1

match p=(n {Name:'BRCA1'})-[:AssociationType*..2]->(m) 
return p

//How many shortest paths there are between the node named ‘BRCA1’ and the node named ‘NBR1’
MATCH p = allShortestPaths((source)-[r:AFFILIATED*]-(destination))
WHERE source.Name='BRCA1' AND destination.Name = 'NBR1'
RETURN count(EXTRACT(n IN NODES(p)| n.Name))

// Find the outdegree of all nodes of the first 2 nodes
match (n:TrialGene)-[r]->()
return n.Name as Node, count(r) as Outdegree
order by Outdegree
union
match (a:TrialGene)-[r]->(leaf)
where not((leaf)-->())
return leaf.Name as Node, 0 as Outdegree

// Find degree histogram of the graph
match (n:TrialError)-[r]-()
with n as nodes, count(distinct r) as degree
return degree, count(nodes) order by degree asc